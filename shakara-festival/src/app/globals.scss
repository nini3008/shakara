// globals.scss
@use 'sass:map';
@use 'sass:color';
@use '../styles/variables' as *;
@use '../styles/components' as *;

// Google Fonts (external URLs still use @import)
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Space+Grotesk:wght@300;400;500;600;700;800;900&display=swap');

// Import Tailwind
@tailwind base;
@tailwind components;
@tailwind utilities;

// v2 base CSS variables & base layer
@import '../styles/v2-base.css';

// Base Styles
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

// CSS Custom Properties for theme support
:root {
  // Light theme colors - improved contrast
  --bg-primary-light: #ffffff;
  --bg-secondary-light: #f8fafc;
  --text-primary-light: #0f0f10;
  --text-secondary-light: #1f2937;
  --border-light: #e5e7eb;
  
  // Dark theme colors (default) - improved contrast
  --bg-primary-dark: rgba(10, 10, 10, 0.8);
  --bg-secondary-dark: rgba(20, 20, 20, 0.8);
  --text-primary-dark: #fafafa;
  --text-secondary-dark: #e5e7eb;
  --border-dark: #374151;
  
  // Current theme (defaults to system preference)
  --bg-primary: var(--bg-primary-dark);
  --bg-secondary: var(--bg-secondary-dark);
  --text-primary: var(--text-primary-dark);
  --text-secondary: var(--text-secondary-dark);
  --border: var(--border-dark);
}

// Light theme overrides
[data-theme="light"] {
  --bg-primary: var(--bg-primary-light);
  --bg-secondary: var(--bg-secondary-light);
  --text-primary: var(--text-primary-light);
  --text-secondary: var(--text-secondary-light);
  --border: var(--border-light);
  
  // Ensure readable text on gradient background
  .gradient-text {
    background: linear-gradient(135deg, #c44569 0%, #ff6b9d 50%, #ff9a56 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
    filter: brightness(0.8);
  }
}

html {
  scroll-behavior: smooth;
  overflow-x: hidden;
  margin: 0;
  padding: 0;
}

body {
  font-family: map.get($font-families, 'primary');
  background: #0a0a0a; // Dark theme background
  color: #fafafa; // Light text for dark theme
  line-height: 1.6;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
  padding: 0;
}

// Festival texture background inspired by brand gradients
.texture-bg {
  position: relative;
  /* background textures removed */
  background-color: transparent; /* Allow gradient to show through */
  background-repeat: repeat-y; /* only repeat vertically */
  background-position: top center;
  background-size: contain; /* keep paper scale, span width when possible */

  /* All texture and grain effects removed */
}

/* Global interactive cursor and transitions for buttons/links */
button, [role="button"], a, input[type="button"], input[type="submit"], .clickable {
  cursor: pointer;
}

button, .btn, .gradient-bg, .gradient-bg-secondary {
  transition: transform 0.15s ease, opacity 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
}

button:active, .btn:active {
  transform: translateY(1px);
}

// Themed content areas (only apply to specific sections)
.themed-content {
  background: var(--bg-primary);
  color: var(--text-primary);
  transition: background-color 0.3s ease, color 0.3s ease;
}

// Themed sections for content areas
.themed-section {
  &[data-theme="light"] {
    background: var(--bg-primary-light);
    color: var(--text-primary-light);
  }
  
  &[data-theme="dark"] {
    background: var(--bg-primary-dark);
    color: var(--text-primary-dark);
  }
}

// Keep hero and navigation always dark
.hero-section,
.navigation-section {
  background: #000000 !important;
  color: #ffffff !important;
}

// Theme-aware overrides for content sections
.themed-content {
  // Light theme text color overrides
  &[data-theme="light"] {
    // Override hardcoded white text colors
    * {
      &[style*="color: white"],
      &[style*="color: #ffffff"],
      &[style*="color: #fff"] {
        color: #1a1a1a !important;
      }
    }
    
    // Section-specific overrides
    h1, h2, h3, h4, h5, h6 {
      color: #111827 !important;
    }
    
    p, span, div:not([class*="icon"]):not([class*="button"]) {
      color: #374151 !important;
    }
    
    // Button text should remain white for contrast - cover all button variations with higher specificity
    button, 
    .btn, 
    [class*="button"], 
    [class*="Button"],
    [class*="Btn"],
    a[class*="button"], 
    a[class*="Button"],
    a[class*="Btn"] {
      &:not([class*="secondary"]):not([class*="Secondary"]) {
        color: #ffffff !important;
        
        &:hover, &:focus, &:active, &:visited {
          color: #ffffff !important;
        }
      }
    }
    
    // Additional specific override for orange background buttons
    [style*="background: rgb(217, 119, 6)"],
    [style*="background: linear-gradient"],
    .btn-primary,
    .primary-btn {
      color: #ffffff !important;
      
      &:hover, &:focus, &:active, &:visited {
        color: #ffffff !important;
      }
    }
    
    // Accent colors
    [class*="accent"], 
    [class*="highlight"],
    [class*="primary-text"] {
      color: rgb(184, 134, 11) !important;
    }
    
    // Links (exclude buttons and social links)
    a:not([class*="button"]):not([class*="socialLink"]):not([class*="viewAllButton"]) {
      color: #1f2937 !important;
      
      &:hover {
        color: rgb(184, 134, 11) !important;
      }
    }
  }
}

// Enhanced scrollbar with theme support
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: var(--bg-primary);
  
  [data-theme="light"] & {
    background: #f1f5f9;
  }
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, rgb(217, 119, 6), rgb(255, 215, 0));
  border-radius: 9999px;
  
  &:hover {
    background: linear-gradient(135deg, rgb(255, 215, 0), rgb(217, 119, 6));
  }
  
  [data-theme="light"] & {
    background: linear-gradient(135deg, rgb(217, 119, 6), rgb(184, 134, 11));
    
    &:hover {
      background: linear-gradient(135deg, rgb(184, 134, 11), rgb(217, 119, 6));
    }
  }
}

/* Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: rgb(217, 119, 6) #000000;
}
// Selection styles
::selection {
  background: color('festival-pink');
  color: color('white');
}

::-moz-selection {
  background: color('festival-pink');
  color: color('white');
}

// Focus styles
:focus-visible {
  outline: 2px solid color('festival-yellow');
  outline-offset: 2px;
}

// Disable focus outline for mouse users
:focus:not(:focus-visible) {
  outline: none;
}

// Loading animation for images
img {
  &[data-loading="true"] {
    filter: blur(5px);
    transition: filter 0.3s;
  }
  
  &[data-loading="false"] {
    filter: blur(0);
  }
}

// Reduced motion preferences
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .text-gradient {
    background: none !important;
    -webkit-text-fill-color: unset !important;
    color: color('white') !important;
  }
}

// Dark mode optimizations (even though we're already dark)
@media (prefers-color-scheme: dark) {
  .glass-base {
    background: rgba(255, 255, 255, 0.03);
    border-color: rgba(255, 255, 255, 0.08);
  }
}

// Print styles
@media print {
  * {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  
  .floating-shape,
  .btn::before {
    display: none !important;
  }
}

// Custom CSS properties for dynamic theming
:root {
  --festival-orange: #{color('festival-orange')};
  --festival-pink: #{color('festival-pink')};
  --festival-purple: #{color('festival-purple')};
  --festival-yellow: #{color('festival-yellow')};
  --festival-blue: #{color('festival-blue')};
  --festival-cyan: #{color('festival-cyan')};
  --festival-magenta: #{color('festival-magenta')};
  --festival-red: #{color('festival-red')};
  
  --glass-bg: rgba(255, 255, 255, 0.05);
  --glass-border: rgba(255, 255, 255, 0.1);
  
  --shadow-glow: #{shadow('glow')};
  --shadow-glow-lg: #{shadow('glow-lg')};

  /* RGB triplets for textured background blotches */
  --festival-orange-rgb: #{color.channel(color('festival-orange'), 'red', $space: rgb)}, #{color.channel(color('festival-orange'), 'green', $space: rgb)}, #{color.channel(color('festival-orange'), 'blue', $space: rgb)};
  --festival-pink-rgb: #{color.channel(color('festival-pink'), 'red', $space: rgb)}, #{color.channel(color('festival-pink'), 'green', $space: rgb)}, #{color.channel(color('festival-pink'), 'blue', $space: rgb)};
  --festival-purple-rgb: #{color.channel(color('festival-purple'), 'red', $space: rgb)}, #{color.channel(color('festival-purple'), 'green', $space: rgb)}, #{color.channel(color('festival-purple'), 'blue', $space: rgb)};
  --festival-yellow-rgb: #{color.channel(color('festival-yellow'), 'red', $space: rgb)}, #{color.channel(color('festival-yellow'), 'green', $space: rgb)}, #{color.channel(color('festival-yellow'), 'blue', $space: rgb)};
  --festival-blue-rgb: #{color.channel(color('festival-blue'), 'red', $space: rgb)}, #{color.channel(color('festival-blue'), 'green', $space: rgb)}, #{color.channel(color('festival-blue'), 'blue', $space: rgb)};
}

// Utility classes for Tailwind extensions
@layer utilities {
  .text-gradient {
    background: gradient('primary');
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
  }
  
  .text-gradient-rainbow {
    background: gradient('rainbow');
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
  }
  
  .bg-glass {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .bg-glass-dark {
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .glow {
    box-shadow: shadow('glow');
  }
  
  .glow-lg {
    box-shadow: shadow('glow-lg');
  }
}

/* Add to globals.scss or globals.css */


/* Radix UI Sheet styles */
[data-state="open"][data-side="right"] {
  animation: slide-in-from-right 0.3s ease-out !important;
}

[data-state="closed"][data-side="right"] {
  animation: slide-out-to-right 0.3s ease-out !important;
}

@keyframes slide-in-from-right {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slide-out-to-right {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(100%);
  }
}

/* Ensure overlay is visible */
[data-radix-portal] {
  position: fixed;
  z-index: 1200 !important;
}

[role="dialog"] {
  position: fixed !important;
  z-index: 1201 !important;
}

// Add this to your navigation component styles or globals.scss

.navbar {
  z-index: 1000 !important; // Ensure navigation is above everything
}

// If you need to target the mobile menu specifically
.mobile-drawer__panel {
  z-index: 1201 !important; // Mobile drawer above navigation
}

.mobile-drawer__backdrop {
  z-index: 1200 !important; // Backdrop below drawer but above nav
}

/* Infinite Moving Cards Animation */
@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-50% - 0.5rem));
  }
}

.animate-scroll {
  animation: scroll linear infinite;
  animation-duration: var(--animation-duration, 40s);
  animation-direction: var(--animation-direction, normal);
}

/* Background Gradient Animation */
@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) translateY(-10%);
  }
}

@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}